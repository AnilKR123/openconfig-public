name: OpenConfig YANG Diff

on:
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Backward Incompatibility Check
    runs-on: ubuntu-latest

    steps:
    - name: Install go
      uses: actions/setup-go@v2
      with:
        go-version: '1.20'

    - name: Check out code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install openconfig-ci CLI
      run: |
        go install github.com/openconfig/models-ci/openconfig-ci@65fa792

    - name: Make sure all backward-incompatible changes are covered by version changes.
      id: check
      run: |
        readonly HEAD=${{ github.event.pull_request.head.sha }}
        readonly BASE="$(git merge-base origin/master "${HEAD}")"

        BASEREPODIR=public_base
        mkdir -p "${BASEREPODIR}/release"
        git checkout "${BASE}"
        cp -r release/models "${BASEREPODIR}/release" 
        cp -r third_party "${BASEREPODIR}" 
        git checkout "${HEAD}"
        oldroot="${BASEREPODIR}"
        newroot=.
        oldfiles=$(find "${oldroot}"/release/models -name '*.yang' | tr '\n' ',')
        newfiles=$(find "${newroot}"/release/models -name '*.yang' | tr '\n' ',')

        openconfig-ci diff --disallowed-incompats --oldp "${oldroot}/third_party" --oldfiles "${oldfiles}" --newp "${newroot}/third_party" --newfiles "${newfiles}"

        #echo "-----------List of all YANG node changes-----------" >> "$GITHUB_OUTPUT"
        #openconfig-ci diff --oldp "${oldroot}/third_party" --oldfiles "${oldfiles}" --newp "${newroot}/third_party" --newfiles "${newfiles}" >> "$GITHUB_OUTPUT"
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "leafchanges<<$EOF" >> "$GITHUB_ENV"
        openconfig-ci diff --oldp "${oldroot}/third_party" --oldfiles "${oldfiles}" --newp "${newroot}/third_party" --newfiles "${newfiles}" >> "$GITHUB_ENV"
        echo "$EOF" >> "$GITHUB_ENV"
        #body: "${{ env.leafchanges }}"

    - name: Find Comment
      if: always()
      uses: peter-evans/find-comment@v2
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: -----------List of all YANG node changes-----------

    - name: Create or update comment
      if: always()
      uses: peter-evans/create-or-update-comment@v3
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          -----------List of all YANG node changes-----------
          ${{ env.leafchanges }}
        edit-mode: replace
